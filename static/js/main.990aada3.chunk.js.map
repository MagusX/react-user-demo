{"version":3,"sources":["components/Signup.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Signup","react_default","a","createElement","className","Card","style","width","margin","marginTop","boxShadow","marginBottom","Body","class","Form","Group","Label","Control","type","placeholder","required","Button","block","variant","id","Footer","react_router_dom","to","Component","Login","App","react_router","exact","path","component","rel","href","integrity","crossorigin","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.990aada3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Form, Card } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Signup extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"su-form\">\r\n        <Card style={{ width: '25rem', margin: \"auto\", marginTop: \"5%\", boxShadow: \"0px 0px 7px 3px rgba(54,133,173,1)\", marginBottom: \"5px\" }}>\r\n          <Card.Body>\r\n            <div className=\"su-ava\">\r\n              <i class=\"fas fa-2x fa-user-plus\"></i>\r\n            </div>\r\n            <h3 className=\"su-title\">Create Account</h3>\r\n            <Form>\r\n            <Form.Group>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Email\" required />\r\n            </Form.Group>\r\n            <Form.Group>\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Username\" required />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Button block variant=\"primary\" type=\"submit\" id=\"button\">\r\n              Sign Up\r\n            </Button>\r\n            </Form>\r\n          </Card.Body>\r\n          <Card.Footer id=\"footer\">\r\n            <div className=\"ftr\">Already have an account?<Link to=\"login\"> Log In</Link></div>\r\n          </Card.Footer>\r\n        </Card>   \r\n      </div>           \r\n    )\r\n  }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from \"react\";\r\nimport { Button, Form, Card } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"li-form\">\r\n        <Card style={{ width: '25rem', margin: \"auto\", marginTop: \"5%\", boxShadow: \"0px 0px 7px 3px rgba(54,133,173,1)\", marginBottom: \"5px\" }}>\r\n          <Card.Body>\r\n            <div className=\"li-ava\">\r\n              <i class=\"fas fa-2x fa-user-check\"></i>\r\n            </div>\r\n            <h3 className=\"li-title\">Log In</h3>\r\n            <Form>\r\n            <Form.Group>\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Username\" required />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Button block variant=\"primary\" type=\"submit\" id=\"button\">\r\n              Log In\r\n            </Button>\r\n            </Form>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <div className=\"ftr\">Not a Member?<Link to=\"\"> Sign Up</Link></div>\r\n          </Card.Footer>\r\n        </Card>   \r\n      </div>   \r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/react-user-demo/login\" component={Login} />\n          <Route exact path=\"/react-user-demo/\" component={Signup} />\n        </Switch>\n\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\"\n        />\n        <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/all.css\" integrity=\"sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf\" crossorigin=\"anonymous\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}